<script language="JavaScript">
function viaMk() {
	myRegExp = /mk:@MSITStore:[^.]+.chm::/gim;
	myRepStr = "https://dpt3.dptcorporate.com/Content/Help"
	document.body.innerHTML = document.body.innerHTML.replace(myRegExp,myRepStr);
}
</script>
<!-- LJEM -->
<!-- Error Handler removed 03 June 2014 -->
<HTML>
<HEAD>

<meta name="T_2009t1" content="cleanup">
<TITLE>Booleans and Pattern to create complex models</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<LINK href="../../../JSandSTYLES/t32000vNOHR.css" rel="stylesheet" type="text/css">


<style>.litleft{margin-left:26;margin-top:0}</style>

<style> .noleft
{
margin-left: 22;
margin-top: 0;
}
</style>

</HEAD>

<body bgcolor="white" onload="viaMk();">



<h3>Booleans and Pattern to create complex models</h3>

<p>It is not unusual that different models, although complex, contain common parts. Combining
<a href="../../features/FWfile/T_FW_ft_14.htm"><b>Mirror</b></a>, 
<a href="../../features/ft_15/FWfile/T_FW_ft_15.htm"><b>Pattern</b></a> and Boolean operations can make you save a lot of time when developing a model.</p>


<p>All you have to do is create simple elements that you will combine later (as if they were Standard Parts), using the appropriate Boolean operations, to form the final object.<br>
This method also gives you another advantage: when dealing with a complex modeling session, you can separate the solids which, once combined by means of Boolean, Mirror and Pattern operations, will generate the final object.</p>

<p>Please note that also <b>Smart Objects</b> allow you to join several features and solids and then reuse them, so this would also be a correct approach. However, this example is useful to understand how Booleans can reduce the modeling effort, particularly when you need to combine already existing parts. For example when retrieving legacy files which are static (static solids or even surfaces).</p>

<ul class="noleft">
<li><a href="#Carving"><b>Carving a shaft using a multishell solid (e.g. a solid made of disjoint solids)</b></a>
<li><a href="#Pattern"><b>Complex pattern split into simple solids</b></a>
<li><a href="#Adding"><b>Adding standard shapes (slots and housing) to a design part using pattern and Boolean Union/Difference</b></a>
</ul>

<h4><a NAME="Carving"></a>Carving a shaft using a multishell solid (e.g. a solid made of disjoint solids)</h4>

<p>The following example uses a pattern of solids. Start generating a model, properly defined and shaped, thus creating an impression which can be copied along the shaft.</p>
<br><img SRC="../../../images/solids/NMandOS/pattern2.gif"><br>

<p>Now, with a single angular/linear Pattern operation, you obtain all the copies needed to create the model.</p>

<p>A very important rule which should be underlined is that you must enable the <b>Joined copies</b> option from the <b>More Options</b> selection list of the <a href="../../features/ft_15/FWfile/T_FW_ft_15.htm"><b>Pattern</b></a> command, to keep control over the parametric model of the object. When this option is enabled, the copies generated by the Pattern operation are automatically joined in a single solid with a Boolean <b>
<a href="../../solids/FWfile/T_FW_Union.htm">Union</a></b>.</p>

<br><img SRC="../../../images/solids/NMandOS/pattern1.gif"><br>

<p>You then obtain the required result with a single <b><a href="../../solids/FWfile/T_FW_Difference.htm">Difference</a></b> Boolean operation.</p>

<br><img SRC="../../../images/solids/NMandOS/pattern3.gif"><br>

<h4><a NAME="Pattern">Complex pattern split into simple solids</a></h4>

<p>The example below shows a model which is very simple in terms of processing, but extremely complex for what concerns the number of pockets which must be controlled. In this case too, combining multiple Pattern and Boolean operations will provide an excellent solution.</p>
<br><img SRC="../../../images/solids/NMandOS/pattern2_3.gif"><br>

<p>First of all you must identify the basic elements required. To this purpose, using the appropriate profiles, you generate the red, green and purple solids. Applying Boolean operations, these solids will generate the desired pockets.</p>
<br><img SRC="../../../images/solids/NMandOS/pattern2_0.gif"><br>

<p>In order not to create a useless number of profiles and solids, you generate two angular patterns, and the related Boolean <b><a href="../../solids/FWfile/T_FW_Union.htm">Union</a></b>s, to generate a single red solid.</p>


<p>Again, remember that you must enable the <b>Joined copies</b> option from the <b>More Options</b> selection list of the <a href="../../features/ft_15/FWfile/T_FW_ft_15.htm"><b>Pattern</b></a> command, to keep control over the parametric model of the object. When this option is enabled, the copies generated by the pattern operation are automatically joined in a single solid with a Boolean <b>
<a href="../../solids/FWfile/T_FW_Union.htm">Union</a></b>.</p>

<br><img SRC="../../../images/solids/NMandOS/pattern2_1.gif"><br>

<p>Once again, after the Boolean <b><a href="../../solids/FWfile/T_FW_Union.htm">Union</a></b> of all the basic elements, you generate a linear/angular pattern (red solid). You then obtain the final solid with a Boolean <b>
<a href="../../solids/FWfile/T_FW_Difference.htm">Difference</a></b> operation.</p>

<br><img SRC="../../../images/solids/NMandOS/pattern2_2.gif"><br>

<p>Please note that you can achieve the same result using <b>Smart Objects</b>, however, the example described above shows how you can reduce design time using Booleans. Moreover, you can decide to combine the two methods and use both Smart Objects and Boolean operations.</p>

<h4><a NAME="Adding"></a>Adding standard shapes (slots and housing) to a design part using pattern and Boolean Union/Difference</h4>

<p>The following object (a videoconferencing microphone) has been designed using different methods.</p>

<p>In a complex modeling session, you can separate the solids which, once combined by means of Boolean, Mirror and Pattern operations, will generate the final object.</p>

<p>In this case the external look and feel of the gray object can be easily refined by designers, to satisfy esthetical criteria, without affecting the <b>Model Structure</b> of the model.</p>

<p>Once the design part has been added, you just import the standard tools to create the slots needed to house the microphone and the push button (pink).</p>
<br><img SRC="../../../images/solids/NMandOS/mic1.gif"><br>
<br><img SRC="../../../images/solids/NMandOS/mic2.gif"><br>

<p>With a Mirror operation, you then obtain the final object. If you want to modify the design, just go two steps back, import the new design and repeat the last two steps. You do not need to go through the entire history of the model.</p>
<br><img SRC="../../../images/solids/NMandOS/mic3.gif"></p><br>

<p>Again, you could have achieved the same result using <b>Smart Objects</b>, however, the example described above shows how you can reduce design time using Booleans. Moreover, you can decide to combine the two methods and use both Smart Objects and Boolean operations.</p>

<hr color="silver">
<h5>Related Materials</h5>
<ul class="noleft">
<li><a href="26.htm"><b>How to use Booleans</b></a></li>
</ul>

<hr color="silver">
</body>
</HTML>
