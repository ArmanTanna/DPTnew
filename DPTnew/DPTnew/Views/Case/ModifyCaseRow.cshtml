@model DPTnew.Models.UpdateCase

@{
    ViewBag.Title = "Case Management";
}

@section Scripts {
    <script type="text/javascript">
        var yourApp = yourApp || {};
        yourApp.Urls = yourApp.Urls || {};
        yourApp.Urls.baseUrl = '@Url.Content("~")';

        $('form').one('submit', function () {
            $(this).find('button[type="submit"]').attr('disabled', 'disabled');
            setTimeout(function () {
                $(this).find('button[type="submit"]').attr('disabled', 'disabled');
            }, 2000);
        });

        $(document).ready(function () {
            if ($("#ccEngineer-choice").val() != "hideki.kobayashi@dptcorporate.com")
                $("#ccEngineer-choice").append("<option value='hideki.kobayashi@dptcorporate.com'>hideki.kobayashi@dptcorporate.com</option>");
            if ($("#ccEngineer-choice").val() != "fumiko.ksahara@think3.eu")
                $("#ccEngineer-choice").append("<option value='fumiko.kasahara@think3.eu'>fumiko.kasahara@think3.eu</option>");
            if ($("#ccEngineer-choice").val() != "michiyo.miyako@think3.eu")
                $("#ccEngineer-choice").append("<option value='michiyo.miyako@think3.eu'>michiyo.miyako@think3.eu</option>");
            if ($("#ccEngineer-choice").val() != "satomi.ono@think3.eu")
                $("#ccEngineer-choice").append("<option value='satomi.ono@think3.eu'>satomi.ono@think3.eu</option>");
            if ($("#ccEngineer-choice").val() != "giorgio.pirri@dptcorporate.com")
                $("#ccEngineer-choice").append("<option value='giorgio.pirri@dptcorporate.com'>giorgio.pirri@dptcorporate.com</option>");
            if ($("#ccEngineer-choice").val() != "jacopo.azzi@dptcorporate.com")
                $("#ccEngineer-choice").append("<option value='jacopo.azzi@dptcorporate.com'>jacopo.azzi@dptcorporate.com</option>");

            if ($("#status-choice").val() != "Working")
                $("#status-choice").append("<option value='Working'>Working</option>");
            if ($("#status-choice").val() != "Waiting on R&D")
                $("#status-choice").append("<option value='Waiting on R&D'>Waiting on R&D</option>");
            if ($("#status-choice").val() != "Waiting on Customer")
                $("#status-choice").append("<option value='Waiting on Customer'>Waiting on Customer</option>");
            if ($("#status-choice").val() != "Closed")
                $("#status-choice").append("<option value='Closed'>Closed</option>");
            //if ($("#Status").val() != "Frozen")
            //    $("#Status").append("<option value='Frozen'>Frozen</option>");
        });
    </script>
}

@using (Html.BeginForm("Modify", "Case", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="editor-label" style="font-size: 1.2em;">
        @Html.LabelFor(model => model.CaseId)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.CaseId, new { @readonly = "readonly" })
    </div>

    <div class="editor-label" style="font-size: 1.2em;">
        @Html.LabelFor(model => model.Description)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Description, new { cols = "350", rows = "1", @readonly = "readonly" })
    </div>

    <div class="editor-label" style="font-size: 1.2em;">
        @Html.LabelFor(model => model.Details)
    </div>
    <div class="editor-field">
        @Html.TextAreaFor(model => model.Details, new { cols = "350", rows = "8", @readonly = "readonly" })
    </div>

    <table>
        <tr>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.Product)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Product, new { @readonly = "readonly" })
                </div>
            </td>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.ProductVersion)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.ProductVersion, new { @readonly = "readonly" })
                </div>
            </td>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.Severity)
                </div>
                <div class="editor-field" style="width: 250px;">
                    @Html.TextBoxFor(model => model.Severity, new { @readonly = "readonly" })
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.MachineId)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.MachineId)
                </div>
            </td>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.Platform)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Platform, new { @readonly = "readonly" })
                </div>
            </td>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.PlatformVersion)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.PlatformVersion, new { @readonly = "readonly" })
                </div>
            </td>
        </tr>
        <tr>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.AccountName)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.AccountName, new { @readonly = "readonly" })
                </div>
            </td>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.Contact)
                </div>
                <div class="editor-field">
                    @Html.TextBoxFor(model => model.Contact, new { @readonly = "readonly" })
                </div>
            </td>
            <td></td>
        </tr>
        <tr>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.CCEngineer)
                </div>
                <div class="editor-field">
                    <select name="ccEngineer" id="ccEngineer-choice">
                        <option selected value="@Html.DisplayFor(modelItem => modelItem.CCEngineer)">@Html.DisplayFor(modelItem => modelItem.CCEngineer)</option>
                    </select>
                </div>
            </td>
            <td>
                <div class="editor-label" style="font-size: 1.2em;">
                    @Html.LabelFor(model => model.Status)
                </div>
                <div class="editor-field">
                    <select name="Status" id="status-choice">
                        <option selected value="@Html.DisplayFor(modelItem => modelItem.Status)">@Html.DisplayFor(modelItem => modelItem.Status)</option>
                    </select>
                </div>
            </td>
            <td>
                <input type="submit" value="submit" />
            </td>
        </tr>
    </table>
}
<p><a href="javascript:window.open('','_self').close();"><input type="submit" value="Cancel" /></a></p>
