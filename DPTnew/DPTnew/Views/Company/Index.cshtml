@model DPTnew.Models.CompanyView


@{
    ViewBag.Title = "Companies";
}


@section Scripts {
    @*<script src="~/Scripts/Company/table_list.js"> </script>*@
    <link href="~/Content/buttons.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.buttons.min.js"></script>
    <script src="~/Scripts/buttons.flash.min.js"></script>
    <script src="~/Scripts/jszip.min.js"></script>
    <script src="~/Scripts/pdfmake.min.js"></script>
    <script src="~/Scripts/vfs_fonts.js"></script>
    <script src="~/Scripts/buttons.html5.min.js"></script>
    <script src="~/Scripts/buttons.print.min.js"></script>
    <script src="~/Scripts/jquery.highlight.js"></script>

    <script type="text/javascript">

        var yourApp = yourApp || {};
        yourApp.Urls = yourApp.Urls || {};
        yourApp.Urls.baseUrl = '@Url.Content("~")';
        yourApp.Urls.DataUrl = '@Url.Action("SingleCompanyRow", "Company")';

        /* Formatting function for row details - modify as you need */
        function format(d) {
            // `d` is the original data object for the row
            return '<table cellpadding="5" cellspacing="0" border="0" width="100%" style="padding-left:50px;">' +
             '<tr>' +
                  '<td><b>Address:</b></td>' +
                  '<td>' + d.Address + '</td>' +

                 '<td><b>ZIP:</b></td>' +
                  '<td>' + d.ZIP + '</td>' +

                 '<td><b>City:</b></td>' +
                  '<td>' + d.City + '</td>' +

              '</tr>' +
               '<tr>' +

                  '<td><b>Province:</b></td>' +
                  '<td>' + d.Province + '</td>' +

                  '<td><b>Country:</b></td>' +
                  '<td>' + d.Country + '</td>' +

                  '<td><b>Email:</b></td>' +
                  '<td>' + d.Email + '</td>' +

              '</tr>' +
                   '</table>';
        }

        $(document).ready(function () {
            //var searchFilterHandler = function () {
            //    var api = this.api();
            //    api.$("td:not(.licenses,.details-control)").click(function () {
            //        api.search(this.innerText).draw();
            //        //api.columns(this.cellIndex).search( this.innerHTML ).draw();
            //    });
            //};

            var myTable = $("#companies").DataTable({
                //drawCallback: searchFilterHandler,
                //initComplete: searchFilterHandler,
                serverSide: true,
                processing: true,
                dom: 'lBfrtip',
                buttons: [
                    'csv', 'excel', 'pdf'
                ],
                ajax: {
                    type: "POST",
                    url: "Company/Search"
                },
                select: {
                    style: 'single'
                },
                language: {
                    search: "@DPTnew.Localization.Resource.Search",
                    lengthMenu: "@DPTnew.Localization.Resource.lengthmenu",
                    info: "@DPTnew.Localization.Resource.info",
                    infoFiltered: "@DPTnew.Localization.Resource.infofiltered",
                    paginate: {
                        previous: "@DPTnew.Localization.Resource.Previous",
                        next: "@DPTnew.Localization.Resource.Next",
                    },
                    select: {
                        rows: {
                            0: "@DPTnew.Localization.Resource.noRowsSelected",
                            1: "@DPTnew.Localization.Resource.rowsSelected",
                        }
                    }
                },
                columns: [
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": ''
                },
                { data: "AccountNumber", "className": 'no-dropdown' },
                { data: "AccountName", "className": 'no-dropdown' },
                { data: "AccountKind" },
                { data: "AccountStatus" },
                { data: "LastExp" },
                { data: "SalesRep" },
                 {
                     "className": 'licenses',
                     "orderable": false,
                     "data": null,
                     "defaultContent": '<button>' + "@DPTnew.Localization.Resource.View_Menu_Licenses" + '</button>'
                 }
                ],
                //order: [[1, 'asc']],
                orderClasses: false,
                createdRow: function (row, data, index) {
                    if (data.AccountStatus != null) {
                        var sub = data.AccountStatus.substring(0, 1);
                        switch (data.AccountStatus.substring(0, 2)) {
                            case "02":
                                $(row).addClass('highlight_brown');
                                break;
                            case "04":
                                $(row).addClass('highlight_blue');
                                break;
                            case "05":
                                $(row).addClass('highlight_red');
                                break;
                            case "06":
                                $(row).addClass('highlight_orange');
                                break;
                        }
                    }
                },
            });

            if ("@ViewBag.IsButtonRole.ToString().ToLower()" == "true")
                new $.fn.dataTable.Buttons(myTable, {
                    buttons: [
                 {
                     text: '@DPTnew.Localization.Resource.Modify',
                     className: 'modify',
                     action: function () {
                         if (myTable.rows('.selected').count() != 0) {
                             var data = myTable.rows('.selected').data()[0];
                             $.post(yourApp.Urls.DataUrl, {
                                 AccountNumber: data.AccountNumber,
                                 AccountName: data.AccountName,
                                 AccountKind: data.AccountKind,
                                 AccountStatus: data.AccountStatus,
                                 SalesRep: data.SalesRep,
                                 Address: data.Address,
                                 ZIP: data.ZIP,
                                 City: data.City,
                                 Province: data.Province,
                                 Country: data.Country,
                                 Email: data.Email,
                                 AccountNameK: data.AccountNameK,
                                 AddressK: data.AddressK,
                                 CityK: data.CityK,
                                 ProvinceK: data.ProvinceK,
                             },
                                             function (result) {
                                                 var url = yourApp.Urls.DataUrl;
                                                 WinId = window.open(url, '_blank');
                                                 WinId.document.open();
                                                 WinId.document.write(result);
                                                 WinId.document.close();
                                                 myTable.rows('.selected').deselect();
                                             });
                         }
                     },
                     enabled: false
                 }
                    ]
                });
            myTable.buttons().container().insertBefore('#companies_filter');

            myTable.on('select', function () {
                var erpRow = myTable.rows('.selected').data()[0];
                myTable.buttons(['.modify']).enable(true);
            });

            myTable.on('deselect', function () {
                myTable.buttons(['.modify']).disable();
            });

            myTable.on("draw", function () {
                var $body = $(myTable.table().body());
                $body.unhighlight();
                $body.highlight(myTable.search());
            });

            // Add event listener for opening licenses page
            $('#companies tbody').on('click', 'td.licenses', function () {

                var tr = $(this).closest('tr');
                var row = myTable.row(tr);
                var datarow = row.data();

                window.open("/Company/Licenses/" + datarow.AccountNumber, "_blank");
            })
            // Add event listener for opening and closing details
            $('#companies tbody').on('click', 'td.details-control', function () {

                var tr = $(this).closest('tr');
                var row = myTable.row(tr);
                var index = row.index();
                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    var data = row.data();
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });


            yadcf.init(myTable, [
      { column_number: 3, filter_default_label: "@DPTnew.Localization.Resource.Select", data: ["customer", "partner", "educational"] },
      { column_number: 4, filter_default_label: "@DPTnew.Localization.Resource.Select", data: ["03 - Active Customer", "06 - Partner", "05 - Ex Customer", "02 - Only Legacy", "04 - Not Active Customer", "04b - Not Active Customer OM", "07 - Ex Partner"] },
      //{ column_number: 5, filter_default_label: "Select", data: ["j: next month", "e: > 1 year", "h: > 1 month", "g: > 3 months", "k: next 3 months", "m: even later", "c: > 3 years", "a: > 10 years", "i: last month", "b: > 5 years", "f: > 6 months", "d: > 2 years", "l: next year"] },
      { column_number: 5, filter_default_label: "@DPTnew.Localization.Resource.Select", data: ["a: pre T3 EP", "b: pre DPT", "c: > 2 years", "d: > 1 year", "e: > 3 quarters", "f: > 2 quarters", "g: > 1 quarter", "h: > 1 month", "i: last 30 days", "j: next 30 days", "k: next 90 days", "l: next 180 days", "m: next 270 days", "n: next 365 days", "o: even later"] },
      { column_number: 6, filter_default_label: "@DPTnew.Localization.Resource.Select", data: JSON.parse(atob("@ViewBag.SalesReps")) }]);

        });


    </script>
}

<div style="width: 1000px">

    <table id="companies" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th></th>

                <th>
                    @Html.DisplayNameFor(model => model.AccountNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountKind)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountStatus)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastExp)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesRep)
                </th>

                <th></th>

            </tr>
        </thead>
    </table>
</div>
