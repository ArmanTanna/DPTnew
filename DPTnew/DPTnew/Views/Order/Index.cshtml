@model DPTnew.Models.Order

@{
    ViewBag.Title = "Order";
}

@section Scripts {
    <link href="~/Content/buttons.dataTables.min.css" rel="stylesheet" />
    <link href="~/Content/jquery.dataTables.min.css" rel="stylesheet" />
    <script src="~/Scripts/jquery.dataTables.min.js"></script>
    <script src="~/Scripts/dataTables.buttons.min.js"></script>
    <script src="~/Scripts/buttons.flash.min.js"></script>
    <script src="~/Scripts/jszip.min.js"></script>
    <script src="~/Scripts/pdfmake.min.js"></script>
    <script src="~/Scripts/vfs_fonts.js"></script>
    <script src="~/Scripts/buttons.html5.min.js"></script>
    <script src="~/Scripts/buttons.print.min.js"></script>
    <script src="~/Scripts/jquery.highlight.js"></script>

    <script type="text/javascript">

        var yourApp = yourApp || {};
        yourApp.Urls = yourApp.Urls || {};
        yourApp.Urls.baseUrl = '@Url.Content("~")';
        yourApp.Urls.OrderDataUrl = '@Url.Action("NewOrderRow", "Order")';
        yourApp.Urls.ApproveOrderRow = '@Url.Action("ApproveOrderRow", "Order")';

        /* Formatting function for row details - modify as you need */
        function format(d) {
            // `d` is the original data object for the row
            return '<table cellpadding="5" cellspacing="0" border="0" width="100%" style="padding-left:50px;">' +
             '<tr>' +
                  '<td><b>Invoicer:</b></td>' +
                  '<td>' + d.Invoicer + '</td>' +
                  '<td><b>InvoicedName:</b></td>' +
                  '<td>' + d.InvoicedName + '</td>' +
                  '<td><b>InvoicedNumber:</b></td>' +
                  '<td>' + d.InvoicedNumber + '</td>' +
              '</tr>' +
               '<tr>' +
                  '<td><b>PO #:</b></td>' +
                  '<td>' + d.PO_Number + '</td>' +
                  '<td><b>InvoiceNumber:</b></td>' +
                  '<td>' + d.InvoiceNumber + '</td>' +
                  '<td><b>InvoiceDate:</b></td>' +
                  '<td>' + d.StrInvoiceDate + '</td>' +
              '</tr>' +
                '<tr>' +
                  '<td><b>NewRenewal:</b></td>' +
                  '<td>' + d.NewRenewal + '</td>' +
                '<td><b>LicenseType:</b></td>' +
                  '<td>' + d.LicenseType + '</td>' +
                  '<td><b>LineType:</b></td>' +
                  '<td>' + d.LineType + '</td>' +
              '</tr>' +
               '<tr>' +
                  '<td><b>RequestDate:</b></td>' +
                  '<td>' + d.StrRequestDate + '</td>' +
                  '<td><b>StartDate:</b></td>' +
                  '<td>' + d.StrStartDate + '</td>' +
                  '<td><b>EndDate:</b></td>' +
                  '<td>' + d.StrEndDate + '</td>' +
              '</tr>' +
               '<tr>' +
                '<td><b>OrderNumber:</b></td>' +
                  '<td>' + d.OrderNumber + '</td>' +
                '<td><b>OrderDate:</b></td>' +
                  '<td>' + d.StrOrderDate + '</td>' +
                  '<td><b>Quantity:</b></td>' +
                  '<td>' + d.Quantity + '</td>' +
              '</tr>' +
               '<tr>' +
                  '<td><b>Invoiced:</b></td>' +
                  '<td>' + d.Invoiced + '</td>' +
                  '<td><b>Note:</b></td>' +
                  '<td>' + d.Note + '</td>' +
                  '<td><b>RowNumber:</b></td>' +
                  '<td>' + d.idxx + '</td>' +
              '</tr>' +
              '</table>';
        }

        $(document).ready(function () {

            var myTable = $("#dptorders").DataTable({
                serverSide: true,
                processing: true,
                dom: 'lBfrtip',
                buttons: [
                    'csv', 'excel', 'pdf'
                ],
                ajax: {
                    type: "POST",
                    url: "Order/Search"
                },
                select: {
                    style: 'single'
                },
                language: {
                    search: "@DPTnew.Localization.Resource.Search",
                    lengthMenu: "@DPTnew.Localization.Resource.lengthmenu",
                    info: "@DPTnew.Localization.Resource.info",
                    infoFiltered: "@DPTnew.Localization.Resource.infofiltered",
                    paginate: {
                        previous: "@DPTnew.Localization.Resource.Previous",
                        next: "@DPTnew.Localization.Resource.Next",
                    },
                    select: {
                        rows: {
                            0: "@DPTnew.Localization.Resource.noRowsSelected",
                            1: "@DPTnew.Localization.Resource.rowsSelected",
                        }
                    }
                },
                columns: [
                {
                    "className": 'details-control',
                    "orderable": false,
                    "data": null,
                    "defaultContent": ''
                },
                { data: "AccountNumber" },
                { data: "AccountName" },
                {
                    data: "LicenseID",
                    render: function (data, type, row) {
                        return data + " - " + row.MachineID;
                    }
                },
                { data: "Item" },
                {
                    data: "Ordered",
                    render: function (data, type, row) {
                        return data + " " + row.Currency;
                    }
                },
                { data: "Discount" },
                { data: "SalesRep" },
                { data: "Status" },
                {
                    "className": 'orders',
                    "orderable": false,
                    "data": null,
                    "defaultContent": '<button>' + "Orders" + '</button>'
                }
                ],
                orderClasses: false
            });

            new $.fn.dataTable.Buttons(myTable, {
                buttons: [
                    {
                        text: '@DPTnew.Localization.Resource.New',
                        className: 'new',
                        action: function () {
                            $.post(yourApp.Urls.OrderDataUrl, {
                                idxx: null,
                                Invoicer: null,
                                InvoicedName: null,
                                InvoicedNumber: null,
                                AccountName: null,
                                AccountNumber: null,
                                OrderNumber: null,
                                StrOrderDate: null,
                                PO_Number: null,
                                InvoiceNumber: null,
                                StrInvoiceDate: null,
                                NewOldAccount: null,
                                SalesRep: null,
                                Currency: null,
                                LineType: null,
                                ProductName: null,
                                ArticleDetail: null,
                                StrStartDate: null,
                                StrEndDate: null,
                                StrRequestDate: null,
                                Ordered: null,
                                Invoiced: null,
                                Quantity: null,
                                LicenseType: null,
                                NewRenewal: null,
                                EURO_PriceList: null,
                                JPY_PriceList: null,
                                LeasingCompany: null,
                                LicenseID: null,
                                Note: null
                            },
                                function (result) {
                                    var url = yourApp.Urls.OrderDataUrl;
                                    WinId = window.open(url, '_blank');
                                    WinId.document.open();
                                    WinId.document.write(result);
                                    WinId.document.close();
                                    myTable.rows('.selected').deselect();
                                });
                        },
                        enabled: true
                    },
                                        {
                                            text: '@DPTnew.Localization.Resource.Modify',
                                            className: 'modify',
                                            action: function () {
                                                if (myTable.rows('.selected').count() != 0) {
                                                    var data = myTable.rows('.selected').data()[0];
                                                    $.post(yourApp.Urls.OrderDataUrl, {
                                                        idxx: data.idxx,
                                                        Invoicer: data.Invoicer,
                                                        InvoicedName: data.InvoicedName,
                                                        InvoicedNumber: data.InvoicedNumber,
                                                        AccountName: data.AccountName,
                                                        AccountNumber: data.AccountNumber,
                                                        OrderNumber: data.OrderNumber,
                                                        OrderDate: data.OrderDate,
                                                        StrOrderDate: data.StrOrderDate,
                                                        PO_Number: data.PO_Number,
                                                        InvoiceNumber: data.InvoiceNumber,
                                                        StrInvoiceDate: data.StrInvoiceDate,
                                                        NewOldAccount: data.NewOldAccount,
                                                        SalesRep: data.SalesRep,
                                                        Currency: data.Currency,
                                                        LineType: data.LineType,
                                                        ProductName: data.ProductName,
                                                        ArticleDetail: data.ArticleDetail,
                                                        StrStartDate: data.StrStartDate,
                                                        StrEndDate: data.StrEndDate,
                                                        StrRequestDate: data.StrRequestDate,
                                                        Ordered: data.Ordered,
                                                        Invoiced: data.Invoiced,
                                                        Quantity: data.Quantity,
                                                        LicenseType: data.LicenseType,
                                                        NewRenewal: data.NewRenewal,
                                                        EURO_PriceList: data.EURO_PriceList,
                                                        JPY_PriceList: data.JPY_PriceList,
                                                        LeasingCompany: data.LeasingCompany,
                                                        LicenseID: data.LicenseID,
                                                        Note: data.Note
                                                    },
                                                        function (result) {
                                                            var url = yourApp.Urls.OrderDataUrl;
                                                            WinId = window.open(url, '_blank');
                                                            WinId.document.open();
                                                            WinId.document.write(result);
                                                            WinId.document.close();
                                                            myTable.rows('.selected').deselect();
                                                        });
                                                }
                                            },
                                            enabled: false
                                        },
                    @*{
                        text: '@DPTnew.Localization.Resource.ButtonApprove',
                        className: 'approve',
                        action: function () {
                            if (myTable.rows('.selected').count() != 0) {
                                var data = myTable.rows('.selected').data()[0];
                                $.post(yourApp.Urls.ApproveOrderRow, {
                                    OrderNumber: data.OrderNumber
                                },
                                    function (result) {
                                        var url = yourApp.Urls.ApproveOrderRow;
                                        WinId = window.open(url, '_blank');
                                        WinId.document.open();
                                        WinId.document.write(result);
                                        WinId.document.close();
                                        myTable.rows('.selected').deselect();
                                    });
                            }
                        },
                        enabled: false
                    }*@
                ]
            });

            myTable.buttons().container().insertBefore('#dptorders_filter');

            myTable.on("draw", function () {
                var $body = $(myTable.table().body());
                $body.unhighlight();
                $body.highlight(myTable.search());
            });

            myTable.on('select', function () {
                if (myTable.rows('.selected').data()[0].Status == "Entered") {
                    myTable.buttons(['.modify']).enable(true);
                    @*if ("@ViewBag.UserRole.ToString().ToLower()" == "true")
                        myTable.buttons(['.approve']).enable(true);*@
                }
            });

            myTable.on('deselect', function () {
                myTable.buttons(['.modify']).disable();
                //myTable.buttons(['.approve']).disable();
            });

            // Add event listener for opening licenses page
            $('#dptorders tbody').on('click', 'td.orders', function () {
                var tr = $(this).closest('tr');
                var row = myTable.row(tr);
                var datarow = row.data();

                window.open("/Order/OrderRows/" + datarow.OrderNumber, "_blank");
            })
            // Add event listener for opening and closing details
            $('#dptorders tbody').on('click', 'td.details-control', function () {

                var tr = $(this).closest('tr');
                var row = myTable.row(tr);
                var index = row.index();
                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    var data = row.data();
                    row.child(format(row.data())).show();
                    tr.addClass('shown');
                }
            });

            yadcf.init(myTable, [
                { column_number: 7, filter_default_label: "@DPTnew.Localization.Resource.Select", data: JSON.parse(atob("@ViewBag.SalesReps")) },
                { column_number: 8, filter_default_label: "@DPTnew.Localization.Resource.Select", data: ["Entered", "Booked", "Checked", "Approved"] }
            ]);
        });

    </script>
}

<div style="width: 1000px">

    <table id="dptorders" class="display" cellspacing="0" width="100%">
        <thead>
            <tr>
                <th></th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountNumber)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.AccountName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LicenseID)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Item)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Ordered)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Discount)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.SalesRep)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Status)
                </th>
                <th></th>
            </tr>
        </thead>
    </table>
</div>
